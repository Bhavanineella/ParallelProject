package com.capgemini.librarymanagementsystem.dao;




import com.capgemini.librarymanagementsystem.db.LibraryDB;
import com.capgemini.librarymanagementsystem.dto.BooksInfo;
import com.capgemini.librarymanagementsystem.dto.UserInfo;
import com.capgemini.librarymanagementsystem.exception.CommonException;

public class UserDAOImplementation implements UserDAO{

	@Override
	public UserInfo authUser(String uname, String upassword) {
		for(UserInfo ui : LibraryDB.USER) {
			if(ui.getUname().equals(uname) && ui.getUpassword().equals(upassword));
			return ui;
		}
		throw new CommonException("Invalid Credentials");
		
	}

	@Override
	public boolean registerUser(UserInfo ui) {
		for(UserInfo ui1 : LibraryDB.USER) {
			if(ui1.getUname().equals(ui.getUname()));
			return false;
		}
		LibraryDB.USER.add(ui);
		return true;
	}

	@Override
	public BooksInfo searchBooks(int bookid) {
		for(BooksInfo bi : LibraryDB.BOOKS) {
			if(bi.getBookid()==bookid) {
				return bi;
			}
		}
		throw new CommonException("Invalid Credentials");
		
	}

	@Override
	public BooksInfo requestBook(int bookid, String bookname, String authorname) {
		for(BooksInfo bi : LibraryDB.BOOKS) {
			if(bi.getBookid()==bookid && bi.getBookname().equals(bookname) 
					&& bi.getAuthorname().equals(authorname));
			return bi;
		}
		throw new CommonException("Invalid Credentials");
	}

	@Override
	public BooksInfo borrow(int bookid) {
		UserInfo ui=new UserInfo();
		int count=ui.getNoOfBooks();
		BooksInfo bi=new BooksInfo();
		if(bi.getBookid()==bookid) {
			return bi;
		}
		count++;
		throw new CommonException("Invlaid id");
		
	}

	}
